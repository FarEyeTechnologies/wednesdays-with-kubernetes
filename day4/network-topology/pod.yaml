apiVersion: v1
kind: Pod
metadata:
  name: k8s-topology-pod
  labels:
    app: k8s-topology
spec:
  # define one or multiple topologySpreadConstraints entries to instruct the kube-scheduler 
  # how to place each incoming Pod in relation to the existing Pods across your cluster.
  topologySpreadConstraints:
  - labelSelector:
      matchLabels:
        app: k8s-topology
  
    # describes the degree to which Pods may be unevenly distributed. 
    maxSkew: 1

    # topologyKey is the key of node labels. 
    # The scheduler will try to put a balanced number of pods into each domain.
    topologyKey: topology.kubernetes.io/zone

    # whenUnsatisfiable indicates how to deal with a Pod if it doesn't satisfy the spread constraint:
    # DoNotSchedule (default) tells the scheduler not to schedule it.
    # ScheduleAnyway tells the scheduler to still schedule it while prioritizing nodes that 
    # minimize the skew.
    whenUnsatisfiable: DoNotSchedule
    
  - labelSelector:
      matchLabels:
        app: k8s-topology
    maxSkew: 1
    topologyKey: kubernetes.io/hostname
    whenUnsatisfiable: ScheduleAnyway

  containers:
  - name: hpa-demo-app
    image: vivek2508/k8s-demo:latest
    ports:
    - containerPort: 8080
    
    # resources: Compute Resources required by this container.
    resources:
      limits:
        cpu: 500m
        memory: 200Mi
      requests:
        cpu: 200m
        memory: 100Mi    